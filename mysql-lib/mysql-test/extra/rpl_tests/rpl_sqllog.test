#
# Basic log file test on slave

source include/master-slave.inc;

--echo # reset sql-log and GTIDs to not get results from previous tests
connection slave;
let $MYSQLD_DATADIR= `select @@datadir;`;
--exec cat /dev/null > $MYSQLD_DATADIR/mysqld-sql.000001
STOP SLAVE;
RESET SLAVE;
RESET MASTER;
connection master;
RESET MASTER;
connection slave;
START SLAVE;

connection master;

#
# Check some basic queries interfering with the log tables.
#
create table log_test (col1 int, col2 int) engine=innodb;
insert into log_test values (1, 2);
insert into log_test values (3, 4);

drop table log_test;

# Check INSERT statements
create table log_test1 (col1 int, col2 varchar(32)) engine=innodb;
create table log_test2 (col1 int, col2 varchar(32), col3 text) engine=innodb;
create table log_test3 (col1 int, col2 varchar(32)) engine=innodb;
create table log_test4 (col1 int, col2 varchar(32), col3 int) engine=innodb;

# Check argument ordering
insert into log_test1 values (1, "test1");
insert into log_test1(col2, col1) values ("test2", 2);

# Check strings are quoted property
insert into log_test1 values (3, "arg with 'single quote' blah");
insert into log_test1 values (4, "arg with \"double quote\" blah");
insert into log_test1 values (5, NULL);

# Check replace statement.
replace into log_test1 values (1, "replace tests");
replace into log_test1 values (6, "replace test");

# Check multi-row statement:
insert into log_test1 values (7, "Multi-row insert"), (8, "Multi-row insert");

# Check INSERT ... SELECT statement.
insert into log_test3 select * from log_test1;

# Check UPDATE statements
update log_test1 set col2="changed1" where col1=1;
update log_test1 set col1=2 where col1=1;
update log_test1 set col2="foo" where col1=2;

# Check UPDATE statements which only change case
update log_test1 set col2="FOO" where col1=2;

# Check UPDATE statements which change to/from NULL
insert into log_test4 values (1, NULL, NULL);
insert into log_test4 values (2, NULL, NULL);
insert into log_test4 values (3, "three", 3);

update log_test4 set col2="one" where col1=1;
update log_test4 set col2=NULL where col1=1;

update log_test4 set col2="" where col1=2;
update log_test4 set col2=NULL where col1=2;

update log_test4 set col2="new three" where col1=3;
update log_test4 set col2=NULL where col1=3;

update log_test4 set col3=1 where col1=1;
update log_test4 set col3=NULL where col1=1;

# Check DELETE statements
delete from log_test1 where col1=3;
delete from log_test1 where col1=4;
delete from log_test1;
insert into log_test2 values (2, "foo", NULL);
insert into log_test2 values (1, NULL, "bar");
delete from log_test2 where col1=2 and col2="foo" and col3 is NULL;
delete from log_test2 where col1=1 and col2 is NULL and col3="bar";

# Check TRUNCATE statements
insert into log_test1 values (1, 'test');
insert into log_test1 values (2, 'test');
insert into log_test1 values (3, 'test');
truncate table log_test1;

drop table log_test1;
drop table log_test2;
drop table log_test3;
drop table log_test4;

# Test SIGNED INTEGER
create table log_numeric1 (col1 tinyint, col2 smallint, col3 mediumint, col4 int, col5 bigint) engine=innodb;
insert into log_numeric1 values(0, 0, 0, 0, 0);
insert into log_numeric1 values(-100, -100, -100, -100, -100);
insert into log_numeric1 values(100, 100, 100, 100, 100);
insert into log_numeric1 values(-128, -32768, -8388608, -2147483648, -9223372036854775808);
insert into log_numeric1 values(127, 32767, 8388607, 2147483647, 9223372036854775807);
delete from log_numeric1 where col2=-100;
update log_numeric1 set col3=47 where col3=-8388608;
update log_numeric1 set col4=29 where col4=2147483647;
update log_numeric1 set col5=9223372036854775800 where col5=9223372036854775807;

# Test UNSIGNED INTEGER
create table log_numeric2 (col1 tinyint unsigned, col2 smallint unsigned, col3 mediumint unsigned, col4 int unsigned, col5 bigint unsigned) engine=innodb;
insert into log_numeric2 values(0, 0, 0, 0, 0);
insert into log_numeric2 values(255, 65535, 16777215, 4294967295, 18446744073709551615);
update log_numeric2 set col5=18446744073709551600 where col5=18446744073709551615;
delete from log_numeric2 where col5=18446744073709551600;

# Test BIT types
create table log_bit (col1 bit(1), col2 bit(17)) engine=innodb;
insert into log_bit values (b'0', b'0');
insert into log_bit values (b'1', b'1');
insert into log_bit values (b'0', b'10101010');
insert into log_bit values (b'0', b'00000000');
insert into log_bit values (b'0', b'1111111111111111');
update log_bit set col1=b'1', col2=b'11001100' where col1=b'0' and col2=b'10101010';
delete from log_bit where col1=b'0';
delete from log_bit where col1=b'1' and col2=b'11001100';
create table log_bit2 (col1 bit(64)) engine=innodb;
insert into log_bit2 values (b'1000100010001000100010001000100010001000100010001000100010001000');

# Test FLOAT / DOUBLE types
create table log_fp1 (col1 float, col2 double) engine=innodb;
insert into log_fp1 values(0.0, 0.0);
insert into log_fp1 values(-0.0, -0.0);
insert into log_fp1 values(-0.0000001, -0.000001);
insert into log_fp1 values(-1e-200, -1e-200);
insert into log_fp1 values(1e-200, 1e-200);
insert into log_fp1 values(-1.0, -1.0);
insert into log_fp1 values("nan", "nan");
insert into log_fp1 values("inf", "inf");
insert into log_fp1 values(COS(0.4), COS(0.4));
update log_fp1 set col1=SIN(0.4) where col1=COS(0.4);
delete from log_fp1 where col1=SIN(0.4);
delete from log_fp1 where col1=-1e-200;
update log_fp1 set col2=1e37 where col2=1e-200;
update log_fp1 set col2=3.14159 where col2=-0.000001;
delete from log_fp1 where col1=-0.0000001;

# Test DATE / TIME types
create table log_dt1 (col1 datetime, col2 date, col4 time, col5 year) engine=innodb;
insert into log_dt1 values('0000-00-00 00:00:00', '0000-00-00', '00:00:00', '0000');
insert into log_dt1 values('2008-12-01 13:56:04', '2008-12-01', '13:56:04', '2008');
update log_dt1 set col1='2004-04-03 12:00:00' where col1='0000-00-00 00:00:00';
update log_dt1 set col2='2004-04-03' where col2='0000-00-00';
update log_dt1 set col4='12:00:00' where col4='00:00:00';
update log_dt1 set col5='2004' where col5='0000';
delete from log_dt1 where col5='2004';

# Test CHAR and VARCHAR
create table log_str1 (col1 char(4), col2 varchar(4)) engine=innodb;
insert into log_str1 values('', '');
insert into log_str1 values('foo', 'bar');
insert into log_str1 values(' foo', ' bar');
insert into log_str1 values('a\0\0', 'b\0\0');
delete from log_str1 where col1='foo';
update log_str1 set col1='foo' where col1=' foo' and col2=' bar';

# Test BINARY and VARBINARY
create table log_str2 (col1 binary(16), col2 varbinary(16)) engine=innodb;
insert into log_str2 values('a', 'b');
insert into log_str2 values('a\0\0', 'b\0\0');
insert into log_str2 values('\0\1a', '\0\1b');
delete from log_str2 where col1='a\0\0';
update log_str2 set col1='x\0\0\1\1' where col2='\0\1b';

# Test BLOB and TEXT
create table log_str3 (col1 blob, col2 text) engine=innodb;
insert into log_str3 values('a', 'b');
insert into log_str3 values('a\0\0', 'b\0\0');
insert into log_str3 values('\0\1a', '\0\1b');
delete from log_str3 where col1='a\0\0';
update log_str3 set col1='x\0\0\1\1' where col2='\0\1b';

# Test base64 encoding - String::print64
insert into log_str3 values('\0', NULL);
insert into log_str3 values('\0t', NULL);
insert into log_str3 values('\0te', NULL);
insert into log_str3 values('\0tes', NULL);
insert into log_str3 values('\0test', NULL);
insert into log_str3 values('\0test1', NULL);
insert into log_str3 values('\0test12', NULL);
insert into log_str3 values('\0test123', NULL);
insert into log_str3 values('\0test1234', NULL);
insert into log_str3 values('\0abcdefghijklmnopqrstuvwxyz=01234567890', NULL);

# Test ENUM
create table log_enum1 (col1 ENUM('one', 'two', 'three')) engine=innodb;
insert into log_enum1 values('one');
insert into log_enum1 values('two');
insert into log_enum1 values('three');
insert into log_enum1 values(1);
insert into log_enum1 values(NULL);
delete from log_enum1 where col1=1;
delete from log_enum1 where col1='two';
update log_enum1 set col1='two' where col1=3;
update log_enum1 set col1=1 where col1='two';

# Test SET
create table log_set1 (col1 SET('a', 'b', 'c', 'd')) engine=innodb;
insert into log_set1 values('a');
insert into log_set1 values('a,b');
insert into log_set1 values('c,d');
insert into log_set1 values('a,b,c');
insert into log_set1 values('a,b,c,d');
delete from log_set1 where col1='c,d';
update log_set1 set col1='a,b' where col1='a,b,c';

#flush logs;

# Drop tables otherwise we will cause errors in other testcases.
drop table log_bit;
drop table log_bit2;
drop table log_dt1;
drop table log_enum1;
drop table log_fp1;
drop table log_numeric1;
drop table log_numeric2;
drop table log_set1;
drop table log_str1;
drop table log_str2;
drop table log_str3;

# Test DDL logging.
create database mysqltest;

create table mysqltest.item (name char(20) default '' not null, price int(5) default '0' not null, floatprice float, comment char(20), mybits bit(8), nullstring char(10), enumcol enum('true', 'false'), setcol set('red', 'yellow', 'blue'), tinycol tinyint, bigintcol bigint(20), float8col float8, varcharcol varchar(20), varbinarycol varbinary(20), yearcol year, datecol date, timecol time, datetimecol datetime, tinyblobcol tinyblob, mediumblobcol mediumblob, primary  key (name)) engine=innodb;

insert into mysqltest.item values('google cup', 10, 5.0, '\'\n', b'1001', null, 'true', 'red,yellow', 13, 1234567890, 12.34, 'varchar column', 'varbinary column', 2008, '2008-11-15', '09:10:11', '2008-11-15 09:10:11', 'Tiny blob column', 'Medium blob col');

insert into mysqltest.item values('google hat', 5, 5.0, '\'\n', b'1001', null, 'true', 'red,yellow', 13, 1234567890, 12.34, 'varchar column', 'varbinary column', 2008, '2008-11-15', '09:10:11', '2008-11-15 09:10:11', 'Tiny blob column', 'Medium blob col');

create table mysqltest.myitem engine=innodb select * from mysqltest.item;

# Test multi-update.
update mysqltest.item, mysqltest.myitem set mysqltest.myitem.price=12, mysqltest.item.price=13 where mysqltest.item.name='google cup' and mysqltest.myitem.name='google hat';

# Test multi-delete
delete mysqltest.item, mysqltest.myitem from mysqltest.item inner join mysqltest.myitem on mysqltest.item.name=mysqltest.myitem.name;

create index price_index on mysqltest.item(price);
alter table mysqltest.item drop column mediumblobcol;
drop index price_index on mysqltest.item;

truncate table mysqltest.item;

drop table mysqltest.item;

drop database mysqltest;

save_master_pos;
connection slave;
sync_with_master;

connection master;
--echo # Show contents of the binlog on master
--let $keep_gtid_events= 1
--source include/show_binlog_events.inc

--echo # Show the log content (timestamp is removed)
connection slave;
let $MYSQLD_DATADIR= `select @@datadir;`;
--exec cat $MYSQLD_DATADIR/mysqld-sql.000001 | cut -d' ' -f8-

--source include/rpl_end.inc
