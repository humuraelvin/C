CREATE TABLE t1 (
pk INTEGER AUTO_INCREMENT PRIMARY KEY,
fdate DATE
) ENGINE=MyISAM;
SET GLOBAL use_stat_tables = PREFERABLY;
SET GLOBAL innodb_lock_wait_timeout = 10;
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	Engine-independent statistics collected
test.t1	analyze	status	Table is already up to date
# connection con1
begin;
update mysql.column_stats set nulls_ratio = 0
where db_name = 'test' and table_name = 't1';
# connection con2
#
# first try with ordinary lock wait timeout
# this used to become silently inconsistent when
# column_stats was skipped over
#
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	Operation failed
#
# then try with innodb reporting deadlock
# this used to cause assertion
#
SET DEBUG_DBUG='+d,innodb_report_deadlock';
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	Operation failed
SET DEBUG_DBUG='-d,innodb_report_deadlock';
# connection con1
rollback;
# connection con2
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	Engine-independent statistics collected
test.t1	analyze	status	Table is already up to date
# Cleanup
DROP TABLE t1;
SET GLOBAL use_stat_tables = DEFAULT;
SET GLOBAL innodb_lock_wait_timeout = DEFAULT;
