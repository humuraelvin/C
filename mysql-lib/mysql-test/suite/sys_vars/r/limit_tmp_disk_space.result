DROP TABLE IF EXISTS t1;
SET @start_tmp_table_size = @@global.tmp_table_size;
SET @start_max_heap_table_size = @@global.max_heap_table_size;
SET @start_limit_tmp_disk_space = @@global.limit_tmp_disk_space;
# Set tmp_table_size low to force internal tmp tables out to disk
set tmp_table_size = 1024;
CREATE TABLE t1 (
id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
gender CHAR(1),
name CHAR(255)
);
#
# test order by (filesort)
#
EXPLAIN SELECT *
FROM t1
ORDER BY t1.name, t1.gender, t1.id;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	3403	Using filesort
SET @@global.limit_tmp_disk_space = 1;
SELECT *
FROM t1
ORDER BY t1.name, t1.gender, t1.id;
ERROR HY000: Query has consumed more temporary disk space than allowed by limit_tmp_disk_space
SET @@global.limit_tmp_disk_space = 0;
SELECT *
FROM t1
ORDER BY t1.name, t1.gender, t1.id;
#
# test internal temporary table
#
# note: use ORDER BY NULL to prevent filesort
# (first decrease size of table...so that query doesn't take forever)
DELETE FROM t1 WHERE t1.id >= 25;
EXPLAIN SELECT
SUM(DISTINCT LENGTH(g1.name)) s1,
SUM(DISTINCT SUBSTRING(g2.name, 1, 3)) s2,
SUM(DISTINCT LENGTH(SUBSTRING(g3.name, 1, 4))) s3
FROM t1 g1, t1 g2, t1 g3 GROUP BY LENGTH(SUBSTRING(g3.name, 5, 10))
ORDER BY NULL;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	g1	ALL	NULL	NULL	NULL	NULL	24	Using temporary
1	SIMPLE	g2	ALL	NULL	NULL	NULL	NULL	24	Using join buffer (flat, BNL join)
1	SIMPLE	g3	ALL	NULL	NULL	NULL	NULL	24	Using join buffer (incremental, BNL join)
SET @@global.limit_tmp_disk_space = 1;
SELECT
SUM(DISTINCT LENGTH(g1.name)) s1,
SUM(DISTINCT SUBSTRING(g2.name, 1, 3)) s2,
SUM(DISTINCT LENGTH(SUBSTRING(g3.name, 1, 4))) s3
FROM t1 g1, t1 g2, t1 g3 GROUP BY LENGTH(SUBSTRING(g3.name, 5, 10))
ORDER BY NULL;
ERROR HY000: Query has consumed more temporary disk space than allowed by limit_tmp_disk_space
SET @@global.limit_tmp_disk_space = 0;
SELECT
SUM(DISTINCT LENGTH(g1.name)) s1,
SUM(DISTINCT SUBSTRING(g2.name, 1, 3)) s2,
SUM(DISTINCT LENGTH(SUBSTRING(g3.name, 1, 4))) s3
FROM t1 g1, t1 g2, t1 g3 GROUP BY LENGTH(SUBSTRING(g3.name, 5, 10))
ORDER BY NULL;
s1	s2	s3
34	0	NULL
34	0	7
34	0	4
34	0	4
34	0	4
34	0	4
DROP TABLE t1;
#
# testcase from https://bugs.launchpad.net/maria/+bug/424553
#
SET @@global.limit_tmp_disk_space = 1;
CREATE TABLE t1(a INT);
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
INSERT INTO t1 SELECT t1.a FROM t1,t1 t2,t1 t3,t1 t4,t1 t5,t1 t6,t1 t7;
ERROR HY000: Query has consumed more temporary disk space than allowed by limit_tmp_disk_space
DROP TABLE t1;
SET @@global.tmp_table_size = @start_tmp_table_size;
SET @@global.max_heap_table_size = @start_max_heap_table_size;
SET @@global.limit_tmp_disk_space = @start_limit_tmp_disk_space;
