# Tests for KILL IDLE.
#
# This test doesn't work with the embedded version as this code
# assumes that one query is running while we are doing queries on
# a second connection.
--source include/not_embedded.inc

connect (con1, localhost, root,,);
connect (con2, localhost, root,,);

connection con1;

# Remember id of con1.
--disable_reconnect
create table t1 (kill_id int);
insert into t1 values(connection_id());

# Kill con1.
connection con2;
select ((@id := kill_id) - kill_id) from t1;
kill idle @id;

connection con1;
--sleep 2

--error 2006,2013
select 1;

--enable_reconnect
# This should work, and we should have a new connection_id().
select ((@id := kill_id) - kill_id) from t1;
select @id != connection_id();

# Make sure the server is still alive.
connection con2;
select 4;
drop table t1;
connection default;

--error ER_NOT_SUPPORTED_YET
kill (select count(*) from mysql.user);

# KILL IDLE @id should not kill an active connection.
create table t1 (id int primary key);
create table t2 (id int unsigned not null);

connect (conn1, localhost, root,,);
connection conn1;

--disable_result_log
--disable_query_log
let $1 = 4096;
while ($1)
{
  eval insert into t1 values ($1);
  dec $1;
}
--enable_query_log
--enable_result_log

insert into t2 select id from t1;

create table t3 (kill_id int);
insert into t3 values(connection_id());

connect (conn2, localhost, root,,);
connection conn2;

connection conn1;
--disable_result_log
send select id from t1 where id in (select distinct id from t2);
--enable_result_log

connection conn2;
select ((@id := kill_id) - kill_id) from t3;
--sleep 1
kill idle @id;

connection conn1;
reap;

connection default;

drop table t1, t2, t3;

disconnect con1;
disconnect con2;
disconnect conn1;
disconnect conn2;
